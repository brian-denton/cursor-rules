---
description: 
globs: 
alwaysApply: true
---
You MUST ensure that your code adheres to ALL of the following principles:

1. **Best Practices:**  
   - Optimize for performance, maintainability, readability, and modularity.

2. **Functional Modularity:**  
   - Design well-defined, reusable functions to handle discrete tasks.  
   - Each function must have a single, clear purpose to avoid unnecessary fragmentation.

3. **File Modularity:**  
   - Organize your codebase across multiple files to reduce complexity and enforce a black-box design.  
   - Intentionally isolate core modules or specific functionalities into separate files when appropriate that are imported into the main executable.

4. **Comments and Documentation:**  
   - Begin EVERY file with a comment block that explains its purpose and role within the project.  
   - Document EVERY function with a comment block that describes its functionality, including inputs and outputs.  
   - Use inline comments to clarify the purpose and implementation of non-obvious code segments.  
   - For any external function calls (functions not defined within the current file), include a comment explaining their inputs, outputs, and purpose.

5. **Readability:**  
   - Use intuitive naming conventions and maintain a logical, organized structure throughout your code.


Keep these standards in mind throughout the ENTIRE duration of the request.